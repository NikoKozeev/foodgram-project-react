# Generated by Django 3.2.16 on 2023-11-13 09:08

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Favorite Recipe',
                'verbose_name_plural': 'Favorite Recipes',
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254, verbose_name='Ingredient Name')),
                ('measurement_unit', models.CharField(max_length=254, verbose_name='Measurement Unit')),
            ],
            options={
                'verbose_name': 'Ingredient',
                'verbose_name_plural': 'Ingredients',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='IngredientInRecipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(default=1, verbose_name='Ingriedient Amount')),
            ],
            options={
                'verbose_name': 'Ingredient in Recipe',
                'verbose_name_plural': 'Ingredients in Recipe',
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='recipes/', verbose_name='Dish Image')),
                ('name', models.CharField(max_length=254, verbose_name='Dish Name')),
                ('text', models.TextField(max_length=1000, verbose_name='Recipe Text')),
                ('cooking_time', models.IntegerField(validators=[django.core.validators.MinValueValidator(1, message='Value should be at least 1!')], verbose_name='Cooking Time')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Publication Date')),
            ],
            options={
                'verbose_name': 'Recipe',
                'verbose_name_plural': 'Recipes',
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254, unique=True, verbose_name='Name')),
                ('color', models.CharField(default='#00cc00', help_text='Enter the tag color. HEX format: ##00cc00', max_length=7, unique=True, validators=[django.core.validators.RegexValidator(message='Value is not a valid color in HEX format!', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')], verbose_name='Color')),
                ('slug', models.SlugField(max_length=254, unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ShoppingCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Cart', to='recipes.recipe', verbose_name='Recipes in Cart')),
            ],
            options={
                'verbose_name': 'Item in Shopping Cart',
                'verbose_name_plural': 'Items in Shopping Cart',
            },
        ),
    ]
